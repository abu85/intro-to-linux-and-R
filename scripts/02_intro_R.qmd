
## 1. Packages needed for R modules: 

- `GAPIT3`
- `ggplot2`
- `rrBLUP`

::: {.callout-tip title="Packages installation" collapse="true"}

### GAPIT is a package that is run in the R software environment.
R can be freely downloaded from [http://www.r-project.org](http://www.r-project.org). 

We also recommend the integrated development environment RStudio which is also freely available at [http://www.rstudio.com](http://www.rstudio.com).


[GAPIT](https://github.com/jiabowang/GAPIT) can currently be installed in several ways.

- From source on the internet
- From GitHub
- From an archive


### Installation from source functions

GAPIT can be loaded with a single funciton. 


```
source("http://zzlab.net/GAPIT/gapit_functions.txt")
```

Or from GitHub function.
```
source("https://raw.githubusercontent.com/jiabowang/GAPIT/refs/heads/master/gapit_functions.txt", encoding = "UTF-8")
```

### Installation from GitHub

Installation can also be made from GitHub when the R package `devtools` is available.

```
install.packages("devtools")
devtools::install_github("jiabowang/GAPIT", force=TRUE)
library(GAPIT)

or
install.packages("remotes")
remotes::install_github("jiabowang/GAPIT")
library(GAPIT)
```

### Installation from an archive


GAPIT can be installed from an archive such as \*.tar.gz or \*.zip archive.
An archive can be downloaded from the "releases" page.
If you would like the latest version of GAPIT from the GitHub site you may want to clone it and then build it (this may require Rtools on Windows).

```bash
git clone git@github.com:jiabowang/GAPIT.git
R CMD build GAPIT
```

Once an archive has been obtained it can be installed from a shell, similar to as follows.


```bash
R CMD INSTALL GAPIT_3.5.0.9000.tar.gz
```

Or similarly from within R.

```
install.packages("GAPIT_3.5.0.9000.tar.gz", repos = NULL, type="source")
```

### In some case of the BiocManager can not be installed

Installation of same packages such as “multtest” and “biobase” can not be intalled from BiocManager directly. These packages can be downloaded in the Bioconductor website and be installed from local source files.

The website of Bioconductor is here:

```
https://bioconductor.org/packages/3.19/bioc/
```

   
Example
=====


```r
# loading packages for GAPIT and GAPIT functions
source("https://raw.githubusercontent.com/jiabowang/GAPIT/refs/heads/master/gapit_functions.txt")
# loading data set
myY=read.table(file="https://github.com/jiabowang/GAPIT/raw/refs/heads/master/Documents/mdp_traits.txt", head = TRUE)
myGD=read.table("https://github.com/jiabowang/GAPIT/raw/refs/heads/master/Documents/mdp_numeric.txt",head=T)
myGM=read.table("https://github.com/jiabowang/GAPIT/raw/refs/heads/master/Documents/mdp_SNP_information.txt",head=T)
#myG=read.table(file="https://github.com/jiabowang/GAPIT/raw/refs/heads/master/Documents/mdp_genotype_test.hmp.txt", head = FALSE)
# performing simulation phenotype
set.seed(198521)
mysimulation<-GAPIT(h2=0.7,NQTN=20,GD=myGD,GM=myGM)
myY=mysimulation$Y


myGAPIT <- GAPIT(
  Y=myY[,c(1,2)],
  GD=myGD,
  GM=myGM,
  model=c("GLM","MLM","SUPER","MLMM","FarmCPU","Blink"),# choose model
  #model=c("FarmCPU"),
  PCA.total=3,                                          # set total PCAs
  NJtree.group=4,                                       # set the number of clusting group in Njtree plot
  QTN.position=mysimulation$QTN.position,
  Inter.Plot=TRUE,                                      # perform interactive plot
  Multiple_analysis=TRUE,                               # perform multiple analysis
  PCA.3d=TRUE,                                          # plot 3d interactive PCA
  file.output=T
)
```

More details please check and [ref user manual](https://github.com/jiabowang/GAPIT).




### Install **ggplot2** & **rrBLUP** package

```r
install.packages("ggplot2")
install.packages("rrBLUP")
library("ggplot2")
library("rrBLUP")

```

:::


## 2. Topics 
- About R, R vs Rstudio, Timeline
- Setting a project or working directory
- Interacting with R
- Packages
- Assign values or objects
- Data types, structures
- How to import and export data or results
- Handle large data sets
- Housekeeping
- Outliers

## 3. Tasks 
- set working directory, 
- print path of the current working directory, 
- upload data, 
- subset data, 
- tidy data
- transform data, 
- plot, 
- saving plot


### R built-in function  
- Directory: `setwd, getwd` 

- Upload data to R: `read.table, read_table, read_csv`, 

- See data structure: `str, summarize, summary`. 



