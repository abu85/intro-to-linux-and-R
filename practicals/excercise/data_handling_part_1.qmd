---
title: "data_handling_part1"
format: html
editor: visual
---


# Help in R

There are three ways to get help in R:\_ 1. The help() command, which can be abbreviated by ?, 2. The help.search() function, which can be abbreviated by ?? looks for function already installed on your computer, 3. The RSiteSearch() command will open a browser to a searchable database of

questions and answers posted on the R-help mailing list.

```{r}
help(c)      # or ?c
# ??merge    # or help.search(merge)
```

# Data types in R
```{r}
str(cars)

```

# Missing Values

In R, missing values are represented by the string NA: We must use the builtin *is.na* function, which will return TRUE if a value is missing and FALSE otherwise.

Many functions (like mean, min, max, sd, quantile, etc.) accept an *na.rm=TRUE* argument, that tells the function to remove any missing values before performing the computation:

We just need to remember to always use *is.na* whenever we are testing to see if a value is a missing value.

```{r}
x = c(1,4,7,NA,12,19,15,21,20)
mean(x)

mean(x, na.rm=TRUE)

is.na(x)

!is.na(x)
```

By combining a call to is.na to the logical "not" operator ! we can filter out missing values in cases where no na.rm= argument is available.

# Matrices

A very common way of storing data is in a matrix. A matrix of 4 rows, 3 columns.

```{r}
mymat = matrix(1:12,4,3)
mymat = matrix(1:12,ncol=3)
```

To create a matrix by rows instead of by columns, the byrow=TRUE argument can be used:

```{r}
mymat = matrix(1:12, ncol=3, byrow=TRUE)
mymat
mymat[4,1]  # element in row=4, col=1
mymat[,1]  # column 1, 
mymat[4,]  # row 4 
```

### acknoledgement:
script. author: "F. Isik"
